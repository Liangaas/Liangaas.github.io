<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liangaa</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-13T16:48:37.815Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>liangaa</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建博客一日游</title>
    <link href="http://yoursite.com/2018/08/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%80%E6%97%A5%E6%B8%B8/"/>
    <id>http://yoursite.com/2018/08/14/搭建博客一日游/</id>
    <published>2018-08-13T16:47:13.885Z</published>
    <updated>2018-08-13T16:48:37.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建博客一日游"><a href="#搭建博客一日游" class="headerlink" title="搭建博客一日游"></a>搭建博客一日游</h2><p>emmm，我心血来潮，觉得别人的博客很好看，就萌生了搭建自己博客的想法…</p><h4 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h4><p>默认大家已经配置好git环境，和拥有自己的github了(如果没有搜搜教程)</p><p>搭建博客我使用的是GitHub Pages和hexo</p><h4 id="hexo的安装"><a href="#hexo的安装" class="headerlink" title="hexo的安装"></a>hexo的安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g </span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="hexo-初始化"><a href="#hexo-初始化" class="headerlink" title="hexo 初始化"></a>hexo 初始化</h4><ul><li><p>在自己喜欢的路径下,创建一个新的文件夹，因为初始化hexo需要在空的文件夹下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></li><li><p>生成hexo效果，在本地查看效果，默认端口为4000</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g #等同于hexo generate</span><br><span class="line">hexo s #等同于hexo server</span><br></pre></td></tr></table></figure></li></ul><h4 id="部署到GitHub-Pages-就是经常看到的xxx-github-io"><a href="#部署到GitHub-Pages-就是经常看到的xxx-github-io" class="headerlink" title="部署到GitHub Pages(就是经常看到的xxx.github.io)"></a>部署到GitHub Pages(就是经常看到的xxx.github.io)</h4><ul><li><p>新建一个仓库repository</p><p>ps.Repository name 需要填你账户名➕’.github.io’</p><p>e.g. liangaas是我的github的账户名,Repository name = liangaas.github.io</p></li><li><p>去本地刚刚初始的hexo文件夹内找到_config.yml,在deploy下的repo（repository的简写）填上chone 的地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/Liangaas/Liangaas.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>或者合并</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></li></ul><h4 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h4><p>这个我真的太喜欢了，这些主题可真好看</p><ul><li><p>进入 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a> hexo 主题商场，挑选你喜欢的主题</p></li><li><p>点击进去，就会跳到它的GitHub上，然后复制clone地址</p></li><li><p>进入到Hexo下的themes文件夹，然后clone，等待下载</p></li><li><p>修改_config.yml的theme，将它的值修改成你想要的主题的名字</p></li><li><p>注意：部署到线上需要清除缓存，不然线上的主题换不成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></li></ul><h4 id="把自己的文章加进入"><a href="#把自己的文章加进入" class="headerlink" title="把自己的文章加进入"></a>把自己的文章加进入</h4><ul><li><p>直接拉你写的文章到source下的_post文件夹中</p></li><li><p>在文章到开始加上title，作为文章到标题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 搭建博客一日游</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>注意：大家快去学一下markdown,真的太喜欢了</p></li></ul><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>大致这样就可以建立起自己好看的博客了，但是我看着自己的博客还是没有别人的好看，有时间再弄一下，再更新….</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;搭建博客一日游&quot;&gt;&lt;a href=&quot;#搭建博客一日游&quot; class=&quot;headerlink&quot; title=&quot;搭建博客一日游&quot;&gt;&lt;/a&gt;搭建博客一日游&lt;/h2&gt;&lt;p&gt;emmm，我心血来潮，觉得别人的博客很好看，就萌生了搭建自己博客的想法…&lt;/p&gt;
&lt;h4 id=&quot;首
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>css选择器</title>
    <link href="http://yoursite.com/2018/08/08/css%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>http://yoursite.com/2018/08/08/css选择器/</id>
    <published>2018-08-08T12:29:29.899Z</published>
    <updated>2018-08-13T16:13:14.367Z</updated>
    
    <content type="html"><![CDATA[<h1 id="css选择器"><a href="#css选择器" class="headerlink" title="css选择器"></a>css选择器</h1><ul><li><strong>简单选择器（Simple selectors）：</strong>通过元素类型、<code>class</code> 或 <code>id</code> 匹配一个或多个元素。</li><li><strong>属性选择器（Attribute selectors）</strong>：通过 属性 / 属性值 匹配一个或多个元素。</li><li><strong>伪类（Pseudo-classes）：</strong>匹配处于确定状态的一个或多个元素，比如被鼠标指针悬停的元素，或当前被选中或未选中的复选框，或元素是DOM树中一父节点的第一个子节点。</li><li><strong>伪元素（Pseudo-elements）</strong>:匹配处于相关的确定位置的一个或多个元素，例如每个段落的第一个字，或者某个元素之前生成的内容。 </li><li><strong>组合器（Combinators）</strong>：这里不仅仅是选择器本身，还有以有效的方式组合两个或更多的选择器用于非常特定的选择的方法。例如，你可以只选择divs的直系子节点的段落，或者直接跟在headings后面的段落。</li><li><strong>多用选择器（Multiple selectors）</strong>：这些也不是单独的选择器；这个思路是将以逗号分隔开的多个选择器放在一个CSS规则下面， 以将一组声明应用于由这些选择器选择的所有元素。</li></ul><h2 id="简单选择器"><a href="#简单选择器" class="headerlink" title="简单选择器"></a>简单选择器</h2><ol><li><p>类型选择器（元素选择器）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I like red.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>I like blue.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>类选择器</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span> = <span class="string">"first done"</span>&gt;</span>First<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span> = <span class="string">"second done"</span>&gt;</span>Second<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span> = <span class="string">"third"</span>&gt;</span>Third<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.first</span>&#123;</span><br><span class="line">    <span class="attribute">font-weight</span>:bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.done</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>:line-through;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>ID选择器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">"num"</span>&gt;</span> 12345<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">"str"</span>&gt;</span>hello,girl.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#num</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>:cursive;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#str</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>:monospace;</span><br><span class="line">    <span class="attribute">text-transform</span>:uppercase;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通用选择器</p><p>它允许选择在一个页面中的所有元素。由于给每个元素应用同样的规则几乎没有什么实际价值，更常见的做法是与其他选择器结合使用。</p></li></ol><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><p>1.存在和值选择器</p><ul><li><code>[attr]</code>：该选择器选择包含 attr 属性的所有元素，不论 attr 的值为何。</li><li><code>[attr=val]</code>：该选择器仅选择 attr 属性被赋值为 val 的所有元素。</li><li><code>[attr~=val]</code>：该选择器仅选择具有 attr 属性的元素，选择包含val的所有元素，及时某元素属性还包含有其他属性值。</li></ul><ol start="2"><li>子串值属性选择器（伪正则选择器）</li></ol><ul><li><code>[attr|=val]</code> : 选择attr属性的值是 <code>val</code> 或值以 <code>val-</code> 开头的元素（注意，这里的 “-” 不是一个错误，这是用来处理语言编码的）。</li><li><code>[attr^=val]</code> : 选择attr属性的值以 <code>val</code> 开头（包括 <code>val</code>）的元素。</li><li><code>[attr$=val]</code> : 选择attr属性的值以 <code>val</code> 结尾（包括 <code>val</code>）的元素。</li><li><code>[attr*=val]</code> : 选择attr属性的值中包含子字符串 <code>val</code> 的元素（一个子字符串就是一个字符串的一部分而已，例如，”cat“ 是 字符串 ”caterpillar“ 的子字符串）。</li></ul><h2 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h2><p>表示某一元素在某一状态下呈现出另一种样式。</p><p>:link     未点击的状态</p><p>:hover    用户鼠标悬停</p><p>:active  点击链接，在抬起前的状态</p><p>:visited  已经点击访问过的状态</p><p>:not   e.g. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class = &quot;fancy&quot;&gt;good&lt;/p&gt;</span><br><span class="line">&lt;p&gt;hello&lt;/p&gt;</span><br><span class="line">/*选择类名不是fancy的&lt;p&gt;元素*/</span><br><span class="line">p:not(.fancy)&#123;</span><br><span class="line">    color:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>:checked</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;css选择器&quot;&gt;&lt;a href=&quot;#css选择器&quot; class=&quot;headerlink&quot; title=&quot;css选择器&quot;&gt;&lt;/a&gt;css选择器&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;简单选择器（Simple selectors）：&lt;/strong&gt;通过元素类型、
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于 “button”</title>
    <link href="http://yoursite.com/2018/08/08/button%E4%B8%8D%E5%90%8C%E7%9A%84%E6%9E%84%E5%BB%BA/"/>
    <id>http://yoursite.com/2018/08/08/button不同的构建/</id>
    <published>2018-08-08T12:29:27.168Z</published>
    <updated>2018-08-13T16:47:05.929Z</updated>
    
    <content type="html"><![CDATA[<p>在日常编码的过程中，发现有时候使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type = &quot;submit&quot;&gt;</span><br><span class="line">&lt;input type = &quot;button&quot;&gt;</span><br><span class="line">&lt;button&gt;&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>查了一下资料，来做一个小结</p><ol><li>\<input type="submit">  当用户点击时，会自动提交表单。</li><li>\<input type="button">  显示是一个按钮，但是如何没有js的处理，按下去是没有行为的。</li><li>\<button>\</button>   button元素可能包含内容，文本或图像等内容。还有一些旧版本的浏览器的兼容问题。注意：始终规定type的属性，不同浏览器默认的type属性不一样，Internet Explorer 的默认类型是 “button”，而其他浏览器中（包括 W3C 规范）的默认值是 “submit”。</li><li>还有可以用其他标签加上样式，点击事件等伪装成一个按钮。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在日常编码的过程中，发现有时候使用&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line
      
    
    </summary>
    
    
  </entry>
  
</feed>
